# -*- coding: utf-8 -*-
"""CreditEDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aUnpWHV8jKcORf9HocfQhPzZVGtAnMfi
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load data
df = pd.read_csv('credit.csv')  # Adjust path if needed
df.head()

df.info()
df.describe()
df.shape
df.columns
df.duplicated().sum()
df.isnull().sum()

df = df.drop_duplicates()
df = df.dropna()  # or use df.fillna() depending on the data
df['months_loan_duration'].value_counts().plot(kind='bar')  # Replace feature_name
# sns.boxplot(x='target_variable', y='numerical_feature', data=df)
plt.figure(figsize=(10,8))
# sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.show()

df.head()

df['checking_balance'].value_counts().plot(kind='bar')
plt.title('Checking Balance Distribution')
plt.xlabel('Checking Balance')
plt.ylabel('Count')
plt.show()

"""For correlation **heatmap**"""

sns.boxplot(x='default', y='amount', data=df)
plt.title('Loan Amount by Default Status')
plt.show()

"""**For correlation heatmap**"""

plt.figure(figsize=(10, 8))
sns.heatmap(df.select_dtypes(include='number').corr(), annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap")
plt.show()

"""Distribution Plots for Numerical **Columns**"""

numeric_cols = ['amount', 'age', 'months_loan_duration']
for col in numeric_cols:
    sns.histplot(df[col], kde=True)
    plt.title(f'Distribution of {col}')
    plt.show()

"""Count Plots for Categorical Columns"""

categorical_cols = ['checking_balance', 'purpose', 'savings_balance', 'employment_length']
for col in categorical_cols:
    sns.countplot(data=df, x=col)
    plt.xticks(rotation=45)
    plt.title(f'Count Plot of {col}')
    plt.show()

"""Pairplot for Multivariate Insights"""

sns.pairplot(df[['amount', 'age', 'months_loan_duration', 'default']], hue='default')
plt.show()

"""Groupby Analysis"""

df.groupby('employment_length')['amount'].mean().sort_values(ascending=False).plot(kind='bar')
plt.title("Average Loan Amount by Employment Length")
plt.ylabel("Avg Amount")
plt.show()

"""Target Variable Analysis"""

pd.crosstab(df['checking_balance'], df['default'], normalize='index').plot(kind='bar', stacked=True)
plt.title("Default Rate by Checking Balance")
plt.ylabel("Proportion")
plt.show()

"""Heatmap for Missing Values"""

sns.heatmap(df.isnull(), cbar=False, cmap='viridis')
plt.title("Missing Data Heatmap")
plt.show()